name: Ticket watch

########################################
#  When to run
########################################
on:
  # hourly scan at :00
  schedule:
    - cron:  '0 * * * *'
  # manual button in the UI
  workflow_dispatch:

# Workflow-level permissions
permissions:
  contents: write
  pull-requests: write
  actions: read

########################################
#  Jobs – one job per batch file
########################################
jobs:
  watch:
    # 🛑  Skip EVERYTHING if this comes from an un-trusted PR (fork)
    if: github.event.pull_request == null

    strategy:
      fail-fast: false
      matrix:
        include:
          # primary=true  → only this job may send the “✓ No changes” ping
          - batch_file: 'url_batches/batch1.txt'   # primary
            primary:   true
          - batch_file: 'url_batches/batch2.txt'
            primary:   false
          - batch_file: 'url_batches/batch3.txt'
            primary:   false
          - batch_file: 'url_batches/batch4.txt'
            primary:   false
          - batch_file: 'url_batches/batch5.txt'
            primary:   false

    # never let overlapping scans fight over *.state.json
    concurrency:
      group: ticketwatch-${{ matrix.batch_file }}
      cancel-in-progress: true

    permissions:
      contents: write          # let the bot commit *.state.json
      pull-requests: write     # allow opening a PR if branch-protection blocks push
      actions: read            # allow reading workflow status

    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    # ── 1 Checkout ─────────────────────────────────────────────────────────
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1

    # ── 2 Sync local clone ────────────────────────────────────────────────
    - name: Sync to latest main
      run: git pull --rebase origin "${{ github.ref }}"

    # ── 3 Python & deps ───────────────────────────────────────────────────
    - uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install deps
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi

    # ── 4 Run watcher ─────────────────────────────────────────────────────
    - name: Run watcher
      env:
        TG_TOKEN:  ${{ secrets.TG_TOKEN }}
        TG_CHAT:   ${{ secrets.TG_CHAT }}
        PRIMARY:   ${{ matrix.primary }}
      run: python ticketwatch_v2.py "${{ matrix.batch_file }}"

    # ── 5 Simple state commit with basic retry ─────────────────────────
    - name: Commit state changes
      run: |
        # Configure git
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Check if there are changes to commit
        if ! git diff --quiet; then
          echo "📝 Committing state changes for ${{ matrix.batch_file }}"
          git add "${{ matrix.batch_file }}.state.json" "${{ matrix.batch_file }}"
          git commit -m "auto: update ${{ matrix.batch_file }}.state.json"
          
          # Simple push with basic retry (no reset!)
          for attempt in {1..3}; do
            if git push; then
              echo "✅ State saved successfully!"
              break
            else
              echo "⚠️ Push conflict, trying pull-rebase..."
              git pull --rebase origin main
              if [ $attempt -eq 3 ]; then
                echo "❌ Failed after 3 attempts"
                exit 1
              fi
            fi
          done
        else
          echo "✅ No state changes to commit"
        fi

  # ── 7 Summary job so the whole workflow turns green ─────────────────────
  summary:
    if: always()
    needs: watch
    runs-on: ubuntu-latest
    steps:
      - name: Done
        run: echo "All batch jobs finished."
