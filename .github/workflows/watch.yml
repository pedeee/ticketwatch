name: Ticket watch

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  watch:
    strategy:
      matrix:
        batch:
          - url_batches/batch1.txt
          - url_batches/batch2.txt
          - url_batches/batch3.txt
          - url_batches/batch4.txt
          - url_batches/batch5.txt

    runs-on: ubuntu-latest

    # ─── only block *parallel* runs of the same batch ─────
    concurrency:
      group: ticketwatch-${{ matrix.batch }}
      cancel-in-progress: false

    env:
      URL_FILE:   ${{ matrix.batch }}
      STATE_FILE: ${{ matrix.batch }}.state.json
      TG_TOKEN:   ${{ secrets.TG_TOKEN }}
      TG_CHAT:    ${{ secrets.TG_CHAT }}

    steps:
      - uses: actions/checkout@v4
        with: { persist-credentials: true, fetch-depth: 0, ref: main }

      - name: Sync to latest main
        run: git pull --rebase --quiet

      - uses: actions/setup-python@v5
        with: { python-version: "3.13" }

      - name: Install deps
        run: pip install requests beautifulsoup4 cloudscraper python-dateutil

      - name: Run watcher
        run: python ticketwatch.py

      - name: Commit & push state
        run: |
          set -e
          git config user.name  "ticketwatch bot"
          git config user.email "bot@users.noreply.github.com"
          git add "${STATE_FILE}" "${URL_FILE}" || true
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          git commit -m "auto: update ${STATE_FILE}"

          for i in 1 2 3; do
            echo "Push attempt $i…"
            if git pull --rebase --autostash --quiet && git push --quiet; then
              echo "Push succeeded"
              exit 0
            fi
            echo "Push failed – retrying in 5 s"
            sleep 5
          done
          echo "❌ Could not push after 3 attempts" >&2
          exit 1

  summary:
    needs: watch
    if: ${{ success() }}
    runs-on: ubuntu-latest
    env:
      TG_TOKEN: ${{ secrets.TG_TOKEN }}
      TG_CHAT:  ${{ secrets.TG_CHAT }}
    steps:
      - name: Heartbeat
        run: |
          curl -s -d chat_id="$TG_CHAT" \
                 -d text="✅ Ticketwatch – No changes in the last hour" \
                 https://api.telegram.org/bot$TG_TOKEN/sendMessage
