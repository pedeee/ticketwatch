name: Ticket watch

##############################
#  When to run
##############################
on:
  # hourly scan at :00
  schedule:
    - cron:  '0 * * * *'
  # manual button in the UI
  workflow_dispatch:

##############################
#  Jobs ‚Äì one job per batch
##############################
jobs:
  watch:
    # üõë Skip EVERYTHING if this run comes from
    #    an un-trusted PR (fork) ‚Äì secrets stay hidden.
    if: github.event.pull_request == null

    strategy:
      fail-fast: false
      matrix:
        batch_file:
          - 'url_batches/batch1.txt'
          - 'url_batches/batch2.txt'
          - 'url_batches/batch3.txt'
          - 'url_batches/batch4.txt'
          - 'url_batches/batch5.txt'

    # never let two overlapping scans fight over state files
    concurrency:
      group: ticketwatch-${{ matrix.batch_file }}
      cancel-in-progress: true

    permissions:
      contents: write            # allow the bot to commit *.state.json
      pull-requests: read        # needed for the ‚Äúif‚Äù guard above

    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    # ---------- 1. checkout -----------------------------------------------
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1

    # ---------- 2. keep clone in sync -------------------------------------
    - name: Sync to latest main
      run: git pull --rebase origin "${{ github.ref }}"

    # ---------- 3. set up Python & deps -----------------------------------
    - uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install deps
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi

    # ---------- 4. run the watcher ----------------------------------------
    - name: Run watcher
      env:
        TG_TOKEN: ${{ secrets.TG_TOKEN }}
        TG_CHAT:  ${{ secrets.TG_CHAT }}
      run: |
        python ticketwatch.py "${{ matrix.batch_file }}"

    # ---------- 5. commit & push state ------------------------------------
    - name: Commit & push state
      # only push if there is a diff
      run: |
        git config user.name  "ticketwatch bot"
        git config user.email "bot@example.invalid"

        git add "${{ matrix.batch_file }}.state.json" || true

        if git diff-index --quiet HEAD --; then
          echo "nothing to commit"
        else
          git commit -m "auto: update ${{ matrix.batch_file }}.state.json"
          # force-with-lease avoids diverging-ref errors under concurrency
          git push --force-with-lease
        fi

  # ---------- 6. summary job so workflow turns green ----------------------
  summary:
    if: always()
    needs: watch
    runs-on: ubuntu-latest
    steps:
      - name: Done
        run: echo "All batch jobs finished."
