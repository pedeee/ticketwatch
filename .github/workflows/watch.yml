name: Ticket watch

# ────────────────────────── triggers ───────────────────────────────────────
on:
  schedule:
    - cron: "0 * * * *"           # run at the top of every hour
  workflow_dispatch:              # allow manual “Run workflow”

# this workflow must be able to push commits
permissions:
  contents: write

# ────────────────────────── jobs ───────────────────────────────────────────
jobs:
  watch:
    strategy:
      matrix:
        batch:
          - url_batches/batch1.txt
          - url_batches/batch2.txt
          - url_batches/batch3.txt
          - url_batches/batch4.txt
          - url_batches/batch5.txt
    runs-on: ubuntu-latest
    env:
      URL_FILE:   ${{ matrix.batch }}
      STATE_FILE: ${{ matrix.batch }}.state.json   # <-- unique per batch
      TG_TOKEN:   ${{ secrets.TG_TOKEN }}
      TG_CHAT:    ${{ secrets.TG_CHAT }}

    steps:
      # 1 — checkout with write credentials
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true   # keeps GITHUB_TOKEN for pushes
          ref: main
          fetch-depth: 0

      # 2 — python
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      # 3 — deps
      - name: Install deps
        run: pip install requests beautifulsoup4 cloudscraper python-dateutil

      # 4 — run watcher
      - name: Run watcher
        id: runwatch
        run: python ticketwatch.py

      # 5 — commit & push the batch-specific state file
      - name: Commit state file
        run: |
          set -e
          git config user.name  "ticketwatch bot"
          git config user.email "bot@users.noreply.github.com"

          git add "${STATE_FILE}"
          if git diff --cached --quiet; then
            echo "No state changes to commit."
            exit 0
          fi

          git commit -m "auto: update ${STATE_FILE}"

          # try up to 3 times to push with rebase in case of race
          for try in 1 2 3; do
            echo "Push attempt $try …"
            if git pull --rebase --quiet && git push --quiet; then
              echo "Push succeeded."
              exit 0
            fi
            echo "Push failed, retrying in 5 s …"
            sleep 5
          done

          echo "❌ Could not push after 3 attempts." >&2
          exit 1

    outputs:
      changed: ${{ steps.runwatch.outputs.changed }}

  # ───── summary / heartbeat job ───────────────────────────────────────────
  summary:
    needs: watch                       # wait for all batch jobs
    if: ${{ needs.watch.outputs.changed == 'False' }}   # run only if NONE changed
    runs-on: ubuntu-latest
    env:
      TG_TOKEN: ${{ secrets.TG_TOKEN }}
      TG_CHAT:  ${{ secrets.TG_CHAT }}
    steps:
      - name: Send no-change heartbeat
        run: |
          curl -s \
            -d chat_id="$TG_CHAT" \
            -d text="✅ Ticketwatch – No changes in the last hour" \
            https://api.telegram.org/bot$TG_TOKEN/sendMessage
