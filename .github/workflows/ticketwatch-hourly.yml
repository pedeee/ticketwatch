name: 🎟️ Ticketwatch Hourly Monitor

on:
  schedule:
    # Run every hour at minute 0
    - cron: '0 * * * *'
  workflow_dispatch:
    # Allow manual trigger
    inputs:
      debug:
        description: 'Enable debug mode'
        required: false
        default: 'false'

jobs:
  ticketwatch:
    runs-on: ubuntu-latest
    timeout-minutes: 45  # Increased timeout for slower requests
    
    env:
      TG_TOKEN: ${{ secrets.TG_TOKEN }}
      TG_CHAT: ${{ secrets.TG_CHAT }}
      PRIMARY: "true"
      GITHUB_ACTIONS: "true"  # Enable GitHub Actions optimizations
      
    steps:
    - name: 🚀 Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: 🔍 System health check
      run: |
        echo "🔍 Checking system health..."
        echo "📊 URL count: $(grep -v '^#' urls.txt | grep -c 'http' || echo '0')"
        echo "📄 State file size: $(wc -l < state.json || echo '0') lines"
        echo "🌍 Environment: GitHub Actions"
        
    - name: 🎟️ Run Ticketwatch
      run: |
        echo "🚀 Starting Ticketwatch..."
        python run_hourly.py --github
        
    - name: 💾 Commit and push changes
      run: |
        # Configure git
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Pull latest changes first to avoid conflicts
        git pull origin main --rebase --autostash || true
        
        # Check if there are changes to commit
        if [[ `git status --porcelain` ]]; then
          echo "📝 Changes detected, committing..."
          git add state.json urls.txt failed_urls.json
          git commit -m "🤖 Update state, URLs, and failed URL tracking ($(date))" || echo "⚠️ Commit failed or no changes"
          
          # Try to push with retry
          for i in {1..3}; do
            if git push; then
              echo "✅ Changes pushed to repository"
              break
            else
              echo "⚠️ Push failed, attempt $i/3. Pulling latest changes..."
              git pull origin main --rebase --autostash || true
              if [ $i -eq 3 ]; then
                echo "❌ Failed to push after 3 attempts"
                exit 1
              fi
            fi
          done
        else
          echo "✅ No changes to commit"
        fi
        
    - name: 📊 Run summary
      if: always()
      run: |
        echo "=================================="
        echo "🎟️ TICKETWATCH RUN SUMMARY"
        echo "=================================="
        echo "⏰ Completed at: $(date)"
        echo "📊 Monitored URLs: $(grep -v '^#' urls.txt | grep -c 'http' || echo '0')"
        echo "📄 State entries: $(wc -l < state.json || echo '0') lines"
        echo "🔄 Status: ${{ job.status }}"
        echo "=================================="